package case_study_Car_management.view;
import case_study_Car_management.module.Car;
import case_study_Car_management.module.Vehicle;

import java.util.List;
import java.util.Scanner;
public class CarView {
    private Scanner scanner;


    public CarView() {
        scanner = new Scanner(System.in);
    }

    public Car getCarInput() {
        showHeader();

        String vehicleName = getValidInput("T√™n xe: ");
        String vehicleColor = getValidInput("M√†u xe: ");
        double vehiclePrice = getValidPrice("Gi√° xe (VND): ");
        String vehicleLicensePlate = getValidInput("Bi·ªÉn s·ªë xe: ");
        String vehicleManufacturer = getValidInput("H√£ng s·∫£n xu·∫•t: ");
        String vehicleYearManufacturer = getValidInput("NƒÉm s·∫£n xu·∫•t: ");
        String vehicleDescription = getValidInput("M√¥ t·∫£ xe: ");

        // Th√™m thu·ªôc t√≠nh ri√™ng c·ªßa Car n·∫øu c√≥
        return new Car(vehicleName, vehicleColor, vehiclePrice, vehicleLicensePlate,
                vehicleManufacturer, vehicleYearManufacturer, vehicleDescription);
    }

    public void editCarAttribute(Car car, int attributeChoice) {
        System.out.println("\nüîß S·ª¨A TH√îNG TIN √î T√î");

        switch (attributeChoice) {
            case 1: // T√™n xe
                String newName = getValidInput("T√™n xe m·ªõi: ");
                car.setVehicleName(newName);
                System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t t√™n xe!");
                break;

            case 2: // M√†u xe
                String newColor = getValidInput("M√†u xe m·ªõi: ");
                car.setVehicleColor(newColor);
                System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t m√†u xe!");
                break;

            case 3: // Gi√° xe
                double newPrice = getValidPrice("Gi√° xe m·ªõi (VND): ");
                car.setVehiclePrice(newPrice);
                System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t gi√° xe!");
                break;

            case 4: // Bi·ªÉn s·ªë
                String newLicensePlate = getValidInput("Bi·ªÉn s·ªë m·ªõi: ");
                car.setVehicleLicensePlate(newLicensePlate);
                System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t bi·ªÉn s·ªë xe!");
                break;

            case 5: // H√£ng s·∫£n xu·∫•t
                String newManufacturer = getValidInput("H√£ng s·∫£n xu·∫•t m·ªõi: ");
                car.setVehicleManufacturer(newManufacturer);
                System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t h√£ng s·∫£n xu·∫•t!");
                break;

            case 6: // NƒÉm s·∫£n xu·∫•t
                String newYear = getValidInput("NƒÉm s·∫£n xu·∫•t m·ªõi: ");
                car.setVehicleYearManufacturer(newYear);
                System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t nƒÉm s·∫£n xu·∫•t!");
                break;

            case 7: // M√¥ t·∫£
                String newDescription = getValidInput("M√¥ t·∫£ m·ªõi: ");
                car.setVehicleDescription(newDescription);
                System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t m√¥ t·∫£ xe!");
                break;

            default:
                System.out.println("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!");
        }
    }

    private void showHeader() {
        System.out.println("\n" + "=".repeat(50));
        System.out.println("üöó           NH·∫¨P TH√îNG TIN √î T√î");
        System.out.println("=".repeat(50));
    }

    private String getValidInput(String prompt) {
        String input;
        do {
            System.out.print("üìù " + prompt);
            input = scanner.nextLine().trim();
            if (input.isEmpty()) {
                System.out.println("‚ùå Vui l√≤ng nh·∫≠p th√¥ng tin!");
            }
        } while (input.isEmpty());
        return input;
    }

    private double getValidPrice(String prompt) {
        double price;
        do {
            try {
                System.out.print("üí∞ " + prompt);
                price = Double.parseDouble(scanner.nextLine());
                if (price <= 0) {
                    System.out.println("‚ùå Gi√° xe ph·∫£i l·ªõn h∆°n 0!");
                    price = -1;
                }
            } catch (NumberFormatException e) {
                System.out.println("‚ùå Vui l√≤ng nh·∫≠p s·ªë h·ª£p l·ªá!");
                price = -1;
            }
        } while (price == -1);
        return price;
    }
    public boolean isDuplicateLicensePlate(String licensePlate, String vehicleType,List<Vehicle> vehicles) {
        for (Vehicle vehicle : vehicles) {
            if (vehicle.getVehicleLicensePlate().equalsIgnoreCase(licensePlate) &&
                    vehicle.getVehicleType().equalsIgnoreCase(vehicleType)) {
                return true;
            }
        }
        return false;
    }

    public boolean isValidLicensePlateFormat(String licensePlate) {
        // Regex cho bi·ªÉn s·ªë VN: 2 s·ªë + 1 ch·ªØ + 5 s·ªë (v√≠ d·ª•: 30A-12345)
        String regex = "^\\d{2}[A-Z]\\d-\\d{5}$";;
        return licensePlate.matches(regex);
    }

    public String inputLicensePlateWithValidation(String vehicleType) {
        String licensePlate;

        while (true) {
            System.out.print("Nh·∫≠p bi·ªÉn s·ªë xe " + vehicleType + " (ƒë·ªãnh d·∫°ng: 30A1-12345): ");
            licensePlate = scanner.nextLine().trim().toUpperCase();

            // Ki·ªÉm tra ƒë·ªãnh d·∫°ng
            if (!isValidLicensePlateFormat(licensePlate)) {
                System.out.println("‚ùå ƒê·ªãnh d·∫°ng bi·ªÉn s·ªë kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p theo ƒë·ªãnh d·∫°ng: 30A-12345");
                continue;
            }

            // Ki·ªÉm tra tr√πng l·∫∑p

            // N·∫øu kh√¥ng tr√πng v√† ƒë√∫ng ƒë·ªãnh d·∫°ng
            System.out.println("‚úÖ Bi·ªÉn s·ªë " + licensePlate + " h·ª£p l·ªá!");
            break;
        }

        return licensePlate;
    }

    public void showCarAdded() {
        System.out.println("‚úÖ ƒê√£ th√™m √¥ t√¥ th√†nh c√¥ng!");
        System.out.println("üöó √î t√¥ ƒë√£ ƒë∆∞·ª£c l∆∞u v√†o h·ªá th·ªëng.");
    }
}
