package case_study_Car_management.view;
import case_study_Car_management.controller.ManagementController;
import case_study_Car_management.entity.Vehicle;
import case_study_Car_management.entity.VehicleType;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
public class View {
    public static void main(String[] args) {
        new ManagementController().start();
    }


    private Scanner scanner;
    public View() {
        scanner = new Scanner(System.in);
    }
    public void showWelcome() {
        System.out.println("=== H·ªÜ TH·ªêNG QU·∫¢N L√ù XE ===");
    }
    public int showMainMenuAndGetChoice() {
        showMainMenu();
        return getChoice();
    }
    private void showMainMenu() {
        System.out.println("\n" + "=".repeat(50));
        System.out.println("                    MENU CH√çNH");
        System.out.println("=".repeat(50));
        System.out.println("1. Th√™m xe");
        System.out.println("2. Hi·ªÉn th·ªã danh s√°ch xe");
        System.out.println("3. S·ª≠a th√¥ng tin xe");
        System.out.println("4. X√≥a xe");
        System.out.println("5. T√¨m ki·∫øm xe");
        System.out.println("6. Tho√°t");
        System.out.println("=".repeat(50));
        System.out.print("Nh·∫≠p l·ª±a ch·ªçn c·ªßa b·∫°n: ");
    }
    public int showVehicleTypeMenuAndGetChoice(List<VehicleType> vehicleTypes) {
        for (VehicleType type: vehicleTypes) {
            System.out.printf("%d. %s %s\n", type.getId(), type.getIcon(), type.getName());
        }
        List<Integer> ids = vehicleTypes.stream().map(v -> v.getId()).toList();
        int choice;
        while (true){
            try {
                System.out.print("L·ª±a ch·ªçn c·ªßa b·∫°n: ");
                choice = Integer.parseInt(scanner.nextLine());
                if(ids.contains(choice)){
                    return choice;
                }else{
                    System.out.println("B·∫°n ph·∫£i nh·∫≠p l·ª±a ch·ªçn n·∫±m trong menu");
                }
            }catch (NumberFormatException e){
                System.out.println("B·∫°n ph·∫£i nh·∫≠p s·ªë. Vui l√≤ng nh·∫≠p l·∫°i");
            }

        }
    }
    private int getChoice() {
        try {
            return Integer.parseInt(scanner.nextLine());
        } catch (NumberFormatException e) {
            return -1;
        }
    }
    public static String getTableHeader() {
        return String.format(
                "| %-15s | %-20s | %-10s | %-12s | %-12s | %-15s | %-4s | %-50s |",
                "Lo·∫°i xe", "T√™n xe", "M√†u", "Gi√°", "Bi·ªÉn s·ªë", "H√£ng", "NƒÉm", "M√¥ t·∫£"
        );
    }
    public String getInputWithPrompt(String prompt) {
        System.out.print(prompt);
        return scanner.nextLine();
    }
    public void showSuccessMessage(String message) {
        System.out.println("‚úÖ " + message);
    }
    public void showErrorMessage(String message) {
        System.out.println("‚ùå " + message);
    }
    public void showInvalidChoice() {
        System.out.println("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá! Vui l√≤ng ch·ªçn l·∫°i.");
    }
    public void showExitMessage() {
        System.out.println("C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng h·ªá th·ªëng!");
    }
    public void showAllVehicles(List<Vehicle> vehicles) {
        if (vehicles.isEmpty()) {
            showErrorMessage("Danh s√°ch xe tr·ªëng!");
            return;
        }
        System.out.println("\n" + "=".repeat(80));
        System.out.println("                        DANH S√ÅCH XE");
        System.out.println("=".repeat(80));
        System.out.println(getTableHeader());
        System.out.println("-".repeat(161));
        for (int i = 0; i < vehicles.size(); i++) {
            System.out.println(vehicles.get(i).getInfo());
        }
        System.out.println("üìä T·ªïng s·ªë xe: " + vehicles.size());
    }
    public void showVehicleToEdit(Vehicle vehicle) {
        System.out.println("\n" + "=".repeat(60));
        System.out.println("           TH√îNG TIN XE C·∫¶N S·ª¨A");
        System.out.println("=".repeat(60));
        System.out.println(vehicle.getInfo());
        System.out.println("=".repeat(60));
    }

    public int selectDisplayType() {
        System.out.println("\t1. Hi·ªÉn th·ªã t·∫•t c·∫£");
        System.out.println("\t2. Hi·ªÉn th·ªã theo lo·∫°i xe");
        int choice;
        while (true) {
            try {
                System.out.print("L·ª±a ch·ªçn c·ªßa b·∫°n: ");
                choice = Integer.parseInt(scanner.nextLine());
                if(choice == 1 || choice == 2){
                    return choice;
                }else{
                    System.out.println("B·∫°n ph·∫£i nh·∫≠p l·ª±a ch·ªçn n·∫±m trong menu");
                }
            }catch (NumberFormatException e){
                System.out.println("B·∫°n ph·∫£i nh·∫≠p s·ªë. Vui l√≤ng nh·∫≠p l·∫°i");
            }
        }
    }
}